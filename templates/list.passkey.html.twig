{% extends "base.html.twig" %}

{% block title %}
    Jelkulcsaim - Webmenza
{% endblock title %}

{% block headtitle %}
    Jelkulcsaim
{% endblock headtitle %}

{% block script %}
<script src="https://unpkg.com/@simplewebauthn/browser/dist/bundle/index.umd.min.js"></script>
{% endblock script %}

{% block content %}
<button class="btn btn-primary" id="createpasskeybutton"><i class="bi bi-plus-lg"></i> Létrehozás</button>
<p id="success"></p>
<p id="error"></p>
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Név</th>
                    <th>Műveletek</th>
                </tr>
            </thead>
            <tbody>
                {% for key in keys %}
                <tr>
                    <td>{{ key.name|escape }}</td>
                    <td><a href="delete.passkey.php?id={{ key.id|e }}" class="btn btn-danger" role="button"><i class="bi bi-trash3"></i> Törlés</a></td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    <script>
      const { startRegistration } = SimpleWebAuthnBrowser;
  const elemBegin = document.getElementById('createpasskeybutton');
  const elemSuccess = document.getElementById('success');
  const elemError = document.getElementById('error');

  elemBegin.addEventListener('click', async () => {
    elemSuccess.innerHTML = '';
    elemError.innerHTML = '';

    const resp = await fetch('/register.passkey.php?stage=0');
    const optionsJSON = await resp.json();

    let attResp;
    try {
      attResp = await startRegistration({ optionsJSON });
    } catch (error) {
      if (error.name === 'InvalidStateError') {
        elemError.innerText = 'Error: Authenticator was probably already registered by user';
      } else {
        elemError.innerText = error;
      }

      throw error;
    }

    const verificationResp = await fetch('/register.passkey.php?stage=1', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(attResp),
    });

    const verificationJSON = await verificationResp.json();

    if (verificationJSON && verificationJSON.verified) {
      elemSuccess.innerHTML = 'Jelkulcs létrehozása sikeres!';
    } else {
      elemError.innerHTML = `Valami nem sikerült: <pre>${JSON.stringify(
        verificationJSON,
      )}</pre>`;
    }
  });
    </script>
      
{% endblock content %}